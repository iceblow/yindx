<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dianxin.dao.CheckMapper" >
  <select id="selectPList" resultType="com.dianxin.model.bo.Check">
	    select check_id, name
		  from t_check
		 where pid = 0
		   and deleted = 0
		 order by check_id
  </select>
  <select id="selectCheckByPid" resultType="com.dianxin.model.bo.Check"  parameterType="java.lang.Integer">
        select check_id, name,pid
        from t_check  where pid = #{pid,jdbcType=INTEGER}
           and deleted = 0 
           order by check_id
  </select>
  <insert id="insertPCheck" parameterType="com.dianxin.model.bo.Check">
        <selectKey resultType="int" order="BEFORE" keyProperty="check_id">
            SELECT seq_check_id.NEXTVAL as check_id FROM DUAL
        </selectKey>
        insert into t_check(check_id, name) values (#{check_id}, #{name})
  </insert>
  <insert id="insertCheckItem" parameterType="com.dianxin.model.bo.Check">
        <selectKey resultType="int" order="BEFORE" keyProperty="check_id">
            SELECT seq_check_id.NEXTVAL as check_id FROM DUAL
        </selectKey>
        insert into t_check(check_id, name, pid) values (#{check_id}, #{name}, #{pid})
  </insert>
  <update id="updateCheck" parameterType="java.util.Map">
        update t_check 
            set name = #{name}
           where check_id = #{check_id}
  </update>
  <update id="deleteCheck" parameterType="java.lang.Integer">
        update t_check 
            set deleted = 1
           where check_id = #{check_id} or pid = #{check_id} 
  </update>
  <insert id="insertCheckFlow" parameterType="com.dianxin.model.bo.CheckFlow">
        <selectKey resultType="int" order="BEFORE" keyProperty="check_flow_id">
            select SEQ_CHECK_FLOW_ID.NEXTVAL as check_flow_id from dual
        </selectKey>
        insert into t_check_flow (
	        check_flow_id
            ,user_id
	      <if test="address != null" >
	        ,address
	      </if>
          <if test="longitude != null" >
            ,longitude
          </if>
          <if test="latitude != null" >
            ,latitude
          </if>
          ,score) values (
          #{check_flow_id}
          ,#{user_id}
          <if test="address != null" >
            ,#{address}
          </if>
          <if test="longitude != null" >
            ,#{longitude}
          </if>
          <if test="latitude != null" >
            ,#{latitude}
          </if>
          ,#{score} )
  </insert>
    <insert id="insertCheckResult" parameterType="com.dianxin.model.bo.CheckResult">
        insert into t_check_result (
            check_result_id
            ,check_flow_id
            ,check_id
          <if test="content != null" >
            ,content
          </if>
          ,result
          <if test="problem_id != null" >
            ,problem_id
          </if>
          ) values (
          SEQ_CHECK_RESULT_ID.nextval
          ,#{check_flow_id}
          ,#{check_id}
          <if test="content != null" >
            ,#{content}
          </if>
          ,#{result}
          <if test="problem_id != null" >
            ,#{problem_id}
          </if>
          )
  </insert>
    <select id="queryList"  resultType="com.dianxin.model.bo.CheckFlow" parameterType="java.util.Map">
      select * from (
        select rownum as rn, a.* from (
        select t.*
 		 from t_check_flow t where 1 = 1
<!--  		 <if test="people != null and people != ''"> -->
<!--  		 	and ss_id = #{daqu} -->
<!--  		 </if> -->
		<if test="area_id != null and area_id != '' and (bumen == null or bumen == '') and ids != null">
		  and user_id in
		  <foreach item="ids" collection="ids"  open="(" separator="," close=")">
            #{ids}
    	  </foreach>
		 </if>
		 <if test="bumen != null and bumen != '' and (zhixing == null or zhixing == '') and ids != null">
		  and user_id in
		  <foreach item="ids" collection="ids"  open="(" separator="," close=")">
            #{ids}
    	  </foreach>
		 </if>
		 <if test="zhixing != null and zhixing != ''">
		  and user_id = #{zhixing}
		 </if>
 		 <if test="start != null and start != ''">
 		  and #{start} &lt;= to_char(createdate,'YYYY-MM-DD') 
 		 </if>
 		 <if test="end != null and end != ''">
 		  and to_char(createdate,'YYYY-MM-DD') &lt;= #{end}
 		 </if>
 		 order by createdate desc
 		) a)  b 
        <![CDATA[where b.rn >= #{startIndex,jdbcType=INTEGER} and b.rn <= #{endIndex,jdbcType=INTEGER}]]>
   </select>
     <select id="queryListCount"  resultType="java.lang.Integer"  parameterType="java.lang.Integer">
       select count(*) from (
        select rownum as rn, a.* from (
        select t.*
 		 from t_check_flow t where 1 = 1
<!--  		 <if test="people != null and people != ''"> -->
<!--  		 	and ss_id = #{daqu} -->
<!--  		 </if> -->
		<if test="area_id != null and area_id != '' and (bumen == null or bumen == '') and (zhixing == null or zhixing == '') and ids != null">
		  and user_id in
		  <foreach item="ids" collection="ids"  open="(" separator="," close=")">
            #{ids}
    	  </foreach>
		 </if>
		 <if test="bumen != null and bumen != '' and (zhixing == null or zhixing == '') and ids != null">
		  and user_id in
		  <foreach item="ids" collection="ids"  open="(" separator="," close=")">
            #{ids}
    	  </foreach>
		 </if>
		 <if test="zhixing != null and zhixing != ''">
		  and user_id = #{zhixing}
		 </if>
 		 <if test="start != null and start != ''">
 		  and #{start} &lt;= to_char(createdate,'YYYY-MM-DD') 
 		 </if>
 		 <if test="end != null and end != ''">
 		  and to_char(createdate,'YYYY-MM-DD') &lt;= #{end}
 		 </if>
 		) a)  b 
   </select>
   
   <select id="selectCheckFlowById" resultType="com.dianxin.model.bo.CheckFlow"  parameterType="java.lang.Integer">
        select check_flow_id, user_id,address,longitude,latitude,score,createdate
        from t_check_flow  where check_flow_id = #{id,jdbcType=INTEGER}
  </select>
   <select id="selectCheckResultByCheckFlowId" resultType="com.dianxin.model.bo.CheckResult"  parameterType="java.lang.Integer">
        select check_flow_id,check_result_id,check_id,content,result,problem_id
        from t_check_result  where check_flow_id = #{id,jdbcType=INTEGER}
  </select>
   <select id="selectCheckByCheckResultId" resultType="com.dianxin.model.bo.Check"  parameterType="java.lang.Integer">
        select name,pid,check_id,createdate
        from t_check  where check_id = #{check_id,jdbcType=INTEGER}
  </select>
   <select id="selectCheckByPidId" resultType="com.dianxin.model.bo.Check"  parameterType="java.lang.Integer">
        select name,pid,check_id,createdate
        from t_check  where pid = #{check_id,jdbcType=INTEGER} and deleted = 0
  </select>
  
</mapper>